#!/bin/sh
{% set fs_op = self._TemplateReference__context.name %}
{% include 'common.j2' %}
set -e
cd ${HOME_TMP}
export DIR_NAME=$1

{% include 'cache.j2' %}

{% macro tree(parent_path, fs, parent_fs) %}

  {% if fs is mapping and parent_fs is not none %}
    {% set dummy=fs.__setitem__("__parent", parent_fs) %}
  {% endif %}

  {%- for path in fs -%}
    {# skip virtual parent ref #}
    {%- if path == "__parent" -%}
      {% continue %} 
    {% endif %} {# if path == "__parent" #}
    {% if path != fs_op and path[:1] == "/" %} 
      {{ tree(parent_path + "/" + path if (parent_path != "/") else path, fs[path], fs) }} 
      {% continue %}
    {% endif %} {# if path != fs_op #}
  {% endfor %}

  if (path ~ /^\/.lua{{ (parent_path + "/readdir") | regex_replace("//", "/", "g") | regex_replace("/", "\/", "g") }}$/) {
    {% if "readdir" in fs and "lua" in fs["readdir"]["lua"] %}
      {% set lua_data = fs["readdir"]["lua"] %}
    printf("echo {{ ('cat <<EOF\n' + lua_data + '\nEOF\n') | b64encode }} | base64 -d\n")
    exit
    {% endif %}
  } 
  if (path !~ /^\/.lua.*/ && path ~ /^{{ parent_path | regex_replace("//", "/", "g") | regex_replace("/", "\/", "g") }}$/) {
  {% if fs_op in fs %}

    try_cache(CACHE_FILE_NAME, {{ fs.cache | default(0) }})

    {% if "name" in fs %}
    printf("echo export \"%s\"=\"%s\"\n", "{{ fs.name }}", $NF)
    {% endif %}

    {# set context #} 
    path_lvl=NF-1
    {% if fs["__parent"] is mapping and "name" in fs['__parent'] %}
    printf("echo export \"%s\"=\"%s\"\n", "{{ fs['__parent'].name }}", $path_lvl)
    path_lvl=path_lvl-1  
    {% endif %}



    {% set handler = fs[fs_op] %}
    printf("echo {{ handler | b64encode }} | base64 -d\n")
  {% endif %} {# if fs_op in fs #}
  } 
{%- endmacro %}

{% include 'fs_awk_loop.j2' %}
