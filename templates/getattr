#!/bin/sh
{% set fs_op  = self._TemplateReference__context.name %}
{% include 'common.j2' %} 
{% import 'util.j2' as util %}
set -e
cd ${HOME_TMP}
export DIR_NAME=$1

{% include 'cache.j2' %}

{% macro tree(parent_path, fs, parent_fs) %}

  {% if fs is mapping and parent_fs is not none %}
    {% set dummy=fs.__setitem__("__parent", parent_fs) %}
  {% endif %}

  {% for path in fs %}
    {# skip virtual parent ref #}
    {% if path == "__parent" %}
      {% continue %} 
    {% endif %} {# if path == "__parent" #}
    {% if path != fs_op and path[:1] == "/" %} 
      {{ tree(parent_path + "/" + path if (parent_path != "/") else path, fs[path], fs) }} 
      {% continue %}
    {% endif %} {# if path != fs_op #}
  {% endfor %}

  if (path == "/.lua") {
    printf("echo {{ "echo 'ino=1 mode=drwxr-xr-x nlink=1 uid=0 gid=0 rdev=0 size=0 blksize=512 blocks=2 atime=0 mtime=0 ctime=0 '" | b64encode }} | base64 -d\n")
    exit
  } 

  {%- set r1 =  parent_path | regex_replace("//", "/", "g") | regex_replace("/", "\/", "g") %}
  if (path ~ /^\/.lua.*/) {

    # by default all .lua entites are directories, exclude names from execfuse_fs_ops

    if (path ~ /\/.lua.*({{ util.execfuse_fs_ops | join("|") }})$/) {
        output = sprintf("echo {{ "echo 'ino=1 mode=-rwxr-xr-x nlink=1 uid=0 gid=0 rdev=0 size=0 blksize=512 blocks=2 atime=0 mtime=0 ctime=0'" | b64encode }} | base64 -d\n")
    } else { 
      output = sprintf("echo {{ "echo 'ino=1 mode=drwxr-xr-x nlink=1 uid=0 gid=0 rdev=0 size=0 blksize=512 blocks=2 atime=0 mtime=0 ctime=0 '" | b64encode }} | base64 -d\n")
    }
    print(output)
    exit 0
  }
  if (path ~ /^{{ r1 }}$/) {
  {% if fs_op in fs %}
    {# set context #} 

    path_lvl=NF
    {{ util.tree_up(fs, "sh") }}

    {% set handler = fs[fs_op]["sh"] %}
    printf("echo {{ handler  | b64encode }} | base64 -d\n")
  {% endif %} {# if fs_op in fs #}
  } 
{%- endmacro %}

{% include 'fs_awk_loop.j2' %}
